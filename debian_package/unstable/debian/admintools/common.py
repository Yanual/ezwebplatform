import sys
import os

from configobj import ConfigObj

class EzWebAdminToolResources:

  DB_ADMIN_SCRIPTS_PATH      = "/usr/share/ezweb-platform/admintools/database-backends/"
  SERVER_ADMIN_SCRIPTS_PATH  = "/usr/share/ezweb-platform/admintools/server-backends/"
  CONFIG_BASE_PATH           = "/etc/ezweb-platform/"
  SITE_CONFIG_BASE_PATH      = CONFIG_BASE_PATH + "sites/"
  DEFAULT_DOCUMENT_BASE_PATH = "/var/ezweb-instances/"
  DEFAULT_LOG_BASE_PATH = "/var/log/ezweb-platform/"

  def get_config_file(self, conf_name):
    return self.SITE_CONFIG_BASE_PATH + conf_name + "/config"

  def get_site_config(self, conf_name, create = False):
    filename = self.get_config_file(conf_name)
    exists = os.path.exists(filename)
    if exists and not create:
      cfg = ConfigObj(filename, encoding="utf_8")
    elif not exists and create:
      cfg = ConfigObj()
      cfg.filename = filename
      cfg.encoding= "utf_8"
    elif exists:
      raise Exception("File \"" + filename + "\" already exists")
    else:
      raise EzWebInstanceNotFound(conf_name)

    cfg['name'] = conf_name

    if not cfg.has_key("enabled"):
      cfg["enabled"] = "False"

    if not cfg.has_key("server"):
      cfg["server"] = {}

    if not isinstance(cfg['server'], dict):
      raise Exception() # TODO

    if not cfg.has_key("database"):
      cfg["database"] = {}

    if not isinstance(cfg['database'], dict):
      raise Exception() # TODO

    return cfg

  def get_settings_template(self):
    return self.CONFIG_BASE_PATH + "settings.py-template"

  def get_settings_path(self, conf_name):
    return self.SITE_CONFIG_BASE_PATH + conf_name + "/settings.py"

  def get_default_document_root(self, conf_name):
    return self.DEFAULT_DOCUMENT_BASE_PATH + conf_name

  def get_default_log_path(self, conf_name):
    return self.DEFAULT_LOG_BASE_PATH + conf_name

  def get_default_admin_email(self, cfg):
    return "webmaster@localhost"

  def get_server_admin_script(self, server_type):
    file = self.SERVER_ADMIN_SCRIPTS_PATH + server_type

    if not os.path.exists(file):
      print "Unknown server type \"" + server_type + "\". May be you need to install other ezweb-platform packages."
      sys.exit(-1)

    #if not
    return file

  def get_dbms_admin_script(self, database_engine):
    file = self.DB_ADMIN_SCRIPTS_PATH + database_engine

    if not os.path.exists(file):
      print "Unknown DBMS type \"" + database_engine + "\". May be you need to install other ezweb-platform packages."
      sys.exit(-1)

    return file

  def save_site_config(self, cfg, backup = False):
    if backup and os.path.exists(cfg.filename):
      sys.stderr.write("  Backing up \"" + cfg.filename + "\"... ")
      os.rename(cfg.filename, cfg.filename + "~")
      sys.stderr.write("Done\n")

    conf_name = cfg['name']
    del cfg['name']

    cfg.initial_comment  = []
    cfg.initial_comment.append("#")
    cfg.initial_comment.append("# DO NOT EDIT THIS FILE")
    cfg.initial_comment.append("#")
    cfg.initial_comment.append("# It is automatically generated by the EzWeb admin tools")
    cfg.initial_comment.append("")

    sys.stderr.write("  Saving EzWeb instance settings (" + cfg.filename + ")... ")
    cfg.write()
    os.chmod(cfg.filename, 0600)
    sys.stderr.write("Done\n")

    cfg['name'] = conf_name

  def makedirs(self, path):
    if not os.path.isdir(path):
      os.makedirs(path)


class EzWebInstanceNotFound(Exception):
  None
