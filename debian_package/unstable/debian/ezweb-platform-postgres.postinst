#!/bin/bash

###
# Include debconf module
#
. /usr/share/debconf/confmodule

function float_cond()
{
    local cond=0
    if [[ $# -gt 0 ]]; then
        cond=$(echo "$*" | bc -q 2>/dev/null)
        if [[ -z "$cond" ]]; then cond=0; fi
        if [[ "$cond" != 0  &&  "$cond" != 1 ]]; then cond=0; fi
    fi
    local stat=$((cond == 0))
    return $stat
}

if [ "$1" = "configure" ]; then

  POSTGRES_ADMIN_SCRIPT="/usr/share/ezweb-platform/admintools/database-backends/postgres"

  if [ "$2" != "" ]; then
    VER=`expr match "$2" '\([0-9]*\.[0-9]*\)~svn[0-9]*'`
    #SVNREV=`expr match "$2" '[0-9]*\.[0-9]*~svn\([0-9]*\)'`
    if float_cond "$VER < 0.2"; then
      # If we are upgrading from the old package style, then configure the default instance
      # to use old configuration
      db_get ezweb/pg/dbuser
      DBUSER="$RET"
      db_unregister ezweb/pg/dbuser

      db_get ezweb/pg/dbpasswd
      DBPASSWD="$RET"
      db_unregister ezweb/pg/dbpasswd

      /usr/sbin/update-ezweb-platform update default --database-engine postgres
      $POSTGRES_ADMIN_SCRIPT update default --database-user $DBUSER --database-passwd $DBPASS

      exit 0
    fi
  fi

  RET=`$POSTGRES_ADMIN_SCRIPT getdefaults default`
  eval $RET

  db_set ezweb-platform-postgres/serveraddress "$SERVER_HOST"
  db_set ezweb-platform-postgres/adminuser "$ADMIN_USER"
  db_set ezweb-platform-postgres/adminpass "$ADMIN_PASS"

  ###
  # Read postgres config from user
  #

  db_input high ezweb-platform-postgres/serveraddress
  db_go

  db_get ezweb-platform-postgres/serveraddress
  SERVER_HOST="$RET"

  db_input high ezweb-platform-postgres/adminuser
  db_go

  db_get ezweb-platform-postgres/adminuser
  ADMIN_USER="$RET"

  db_input high ezweb-platform-postgres/adminpass
  db_go

  db_get ezweb-platform-postgres/adminpass
  ADMIN_PASS="$RET"

  $POSTGRES_ADMIN_SCRIPT setdefaults default --server-host "$SERVER_HOST" --admin-user "$ADMIN_USER" --admin-pass "$ADMIN_PASS"

  ###
  # Configure the instances
  #
  INSTANCES=`/usr/sbin/update-ezweb-platform list all --debconf`
  CURRENT_VAL=`/usr/sbin/update-ezweb-platform list database_engine postgres --debconf`
  UNASSIGNED=`/usr/sbin/update-ezweb-platform list database_engine "" --debconf`

  if [ "x$UNASSIGNED" != "x" ]; then
    if [ "x$CURRENT_VAL" != "x" ]; then
      CURRENT_VAL="$CURRENT_VAL, $UNASSIGNED"
    else
      CURRENT_VAL=$UNASSIGNED
    fi
  fi

  db_subst ezweb-platform-postgres/instances choices $INSTANCES
  db_fset ezweb-platform-postgres/instances seen false
  db_set ezweb-platform-postgres/instances $CURRENT_VAL

  db_input high ezweb-platform-postgres/instances || true
  db_go || true

  db_get ezweb-platform-postgres/instances

  if [ "$RET" != "" ]; then
    list=`echo $RET | sed -e 's/, /,/g'`

    saved_IFS=$IFS
    IFS=,
    for conf in $list; do
      echo
      echo "Configuring \"$conf\" for using postgres as DBMS..."
      update-ezweb-platform update $conf --database-engine postgres
    done
    IFS=$saved_IFS
  fi

fi

#DEBHELPER#

exit 0
