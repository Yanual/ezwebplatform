#!/bin/bash

###
# Include debconf module
#
. /usr/share/debconf/confmodule

EZWEB_ADMIN_SCRIPT="/usr/sbin/update-ezweb-platform"

function create_admin_user() {
  db_get ezweb-platform-postgres/adminuser
  ADMIN_USER="$RET"

  if [ "$ADMIN_USER" = "ezwebadmin" ]; then
    db_get ezweb-platform-postgres/adminpass
    ADMIN_PASS="$RET"

    PSQL_VER=`psql --version | grep "psql (PostgreSQL)"`
    PSQL_VER=`expr match "$PSQL_VER" 'psql (PostgreSQL) \([0-9]*\.[0-9]*\)\.[0-9]*'`
    PSQL_CONF_FILE="/etc/postgresql/$PSQL_VER/main/pg_hba.conf"

    if `dpkg --compare-versions "$PSQL_VER" lt "8.0"`; then
      su - postgres -c "psql -c \"CREATE USER $ADMIN_USER PASSWORD '$ADMIN_PASS' CREATEDB CREATEUSER\""
    else
      su - postgres -c "psql -c \"CREATE ROLE $ADMIN_USER PASSWORD '$ADMIN_PASS' SUPERUSER CREATEDB CREATEROLE INHERIT LOGIN\""
    fi
    su - postgres -c "createdb --owner $ADMIN_USER $ADMIN_USER"

    RET=`sed -n 's/local\s\s*all\s\s*ezwebadmin\s\s*password/&/p' < $PSQL_CONF_FILE`
    if [ "x$RET" == "x" ]; then
      echo "Backing up $PSQL_CONF_FILE ..."
      cp $PSQL_CONF_FILE $PSQL_CONF_FILE.ezweb-postinst
      CONTENT=`cat $PSQL_CONF_FILE | sed '/#\s*TYPE\s*DATABASE\s*USER\s*CIDR-ADDRESS\s*METHOD/alocal   all         ezwebadmin                 password'`
      echo "$CONTENT" > $PSQL_CONF_FILE
    fi

    invoke-rc.d postgresql-$PSQL_VER restart
  fi
}

if [ "$1" = "configure" -a -n "$2" ]; then

  # If we are upgrading from the old package style, then configure the default instance
  # to use old configuration
  VER=`expr match "$2" '\([0-9]*\.[0-9]*\)~svn[0-9]*'`
  #SVNREV=`expr match "$2" '[0-9]*\.[0-9]*~svn\([0-9]*\)'`
  if `dpkg --compare-versions "$VER" lt "0.4"`; then

    db_get ezweb-platform-postgres/olduser
    DBUSER="$RET"

    db_get ezweb-platform-postgres/oldpass
    DBPASSWD="$RET"

    $EZWEB_ADMIN_SCRIPT update default --database-engine postgres \
                                       --database-user "$DBUSER" \
                                       --database-pass "$DBPASSWD"

    # create the default admin user
    create_admin_user

    rm "/usr/share/ezweb-platform/.update-db"
    if [ ! -f "/usr/share/ezweb-platform/.update-server" ]; then
      $EZWEB_ADMIN_SCRIPT enable default
    fi
  fi
fi

if [ "$1" = "configure" -a -z "$2" ]; then
  ###
  # Create the default admin user if needed
  #
  create_admin_user
fi

if [ "$1" = "configure" -o "$1" = "reconfigure" ]; then

  db_get ezweb-platform-postgres/serveraddress
  SERVER_HOST="$RET"

  db_get ezweb-platform-postgres/adminuser
  ADMIN_USER="$RET"

  db_get ezweb-platform-postgres/adminpass
  ADMIN_PASS="$RET"


  $EZWEB_ADMIN_SCRIPT setdbmsdefaults postgres default --database-host "$SERVER_HOST" --admin-user "$ADMIN_USER" --admin-pass "$ADMIN_PASS"

  ###
  # Configure the instances
  #
  OLD_VAL=`$EZWEB_ADMIN_SCRIPT list database_engine postgres --debconf`
  db_get ezweb-platform-postgres/instances

  if [ "$RET" != "" -a "$RET" != "$OLD_VAL" ]; then
    list=`echo $RET | sed -e 's/, /,/g'`

    saved_IFS=$IFS
    IFS=,
    for conf in $list; do
      echo
      echo "Configuring \"$conf\" for using postgres as DBMS..."
      update-ezweb-platform update $conf --database-engine postgres
      echo "Done"
    done
    IFS=$saved_IFS
  fi

fi

#DEBHELPER#

db_stop

exit 0
